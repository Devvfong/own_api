<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Upload Photo</title>
  <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gradient-to-r from-purple-500 via-pink-500 to-red-500 min-h-screen flex items-center justify-center">
  <div class="bg-white rounded-3xl shadow-2xl p-8 w-full max-w-md">
    <h1 class="text-3xl font-bold mb-6 text-center text-gray-800">Upload Photo</h1>

    <form id="upload-form" class="flex flex-col gap-4">
      <div id="drop-area" class="border-4 border-dashed border-gray-300 p-6 rounded-xl text-center cursor-pointer hover:border-purple-600 transition">
        Drag & Drop or Click to Upload
        <input type="file" id="photo-file" accept="image/*" class="hidden">
      </div>
      <input type="text" id="title" placeholder="Photo Title" class="border rounded-lg p-2" required>
      <img id="preview" class="hidden w-full rounded-lg mt-4 mb-2" />
      <button type="submit" class="bg-purple-600 text-white py-2 rounded-lg hover:bg-purple-700 transition">Upload</button>
    </form>
  </div>

<script>
const dropArea = document.getElementById("drop-area");
const fileInput = document.getElementById("photo-file");
const preview = document.getElementById("preview");

dropArea.addEventListener("click", () => fileInput.click());
dropArea.addEventListener("dragover", e => { e.preventDefault(); dropArea.classList.add("border-purple-600"); });
dropArea.addEventListener("dragleave", e => { e.preventDefault(); dropArea.classList.remove("border-purple-600"); });
dropArea.addEventListener("drop", e => {
  e.preventDefault();
  dropArea.classList.remove("border-purple-600");
  fileInput.files = e.dataTransfer.files;
  showPreview();
});

fileInput.addEventListener("change", showPreview);

function showPreview() {
  const file = fileInput.files[0];
  if(!file) return;
  const reader = new FileReader();
  reader.onload = () => {
    preview.src = reader.result;
    preview.classList.remove("hidden");
  };
  reader.readAsDataURL(file);
}

document.getElementById("upload-form").addEventListener("submit", async e => {
  e.preventDefault();
  const title = document.getElementById("title").value;
  const file = fileInput.files[0];
  if(!file) return alert("Select a file");
  const reader = new FileReader();
  reader.onloadend = async () => {
    const res = await fetch("/photos", {
      method: "POST",
      headers: {"Content-Type": "application/json"},
      body: JSON.stringify({ title, url: reader.result })
    });
    if(res.ok) window.location.href = "/view";
    else alert("Upload failed");
  };
  reader.readAsDataURL(file);
});
</script>
</body>
</html>
